#!/bin/bash

# Check if Zenity is installed
if ! command -v zenity &> /dev/null; then
    # Zenity not found
    echo "Zenity is not installed."
    read -p "Do you want to install Zenity? (y/n): " install_choice

    if [ "$install_choice" == "y" ]; then
        # Install Zenity
        sudo apt-get update
        sudo apt-get install zenity
    else
        # Use terminal-based dialogs as an alternative (whiptail or dialog)
        # Uncomment one of the following lines based on your preference
        # whiptail --msgbox "Please install Zenity to use the graphical interface." 10 40
        # dialog --msgbox "Please install Zenity to use the graphical interface." 10 40
        exit 1
    fi
fi

# Use Zenity to get user input
SOURCE_DIR=$(zenity --file-selection --directory --title="Select Source Folder")
if [ $? -ne 0 ]; then
    zenity --error --text="Source folder selection canceled."
    exit 1
fi

SOURCE_EXT=$(zenity --list --title="Select Source Extensions" --column="Extensions" --multiple \
    --text="Select one or more source file extensions:" \
    --separator=" " \
    "c" "cpp" "java" "py" "sh")
if [ $? -ne 0 ]; then
    zenity --error --text="Source extensions selection canceled."
    exit 1
fi

COMPILER=$(zenity --list --title="Select Compiler" --column="Compiler" --checklist \
    --text="Select the compiler(s) to use:" \
    --separator=" " \
    FALSE "gcc" \
    FALSE "g++" \
    FALSE "javac" \
    FALSE "python" \
    FALSE "bash")
if [ $? -ne 0 ]; then
    zenity --error --text="Compiler selection canceled."
    exit 1
fi

# Generate Makefile
cat <<EOF > Makefile
# Makefile generated by compile.sh

SRC_DIR := $SOURCE_DIR
SRC_EXT := $SOURCE_EXT
COMPILER := $COMPILER

SRC_FILES := \$(foreach ext,\$(SRC_EXT),\$(wildcard \$(SRC_DIR)/*.\$(ext)))

.PHONY: all clean

all: \$(SRC_FILES)
	@echo "Compilation complete."

clean:
	@rm -f \$(SRC_FILES:.c=.o) \$(SRC_FILES:.cpp=.o) \$(SRC_FILES:.java=.class)

%: %.c
	@echo "Compiling \$< with gcc..."
	@gcc -o \$@ \$<

%: %.cpp
	@echo "Compiling \$< with g++..."
	@g++ -o \$@ \$<

%.class: %.java
	@echo "Compiling \$< with javac..."
	@javac \$<

%: %.py
	@echo "Running \$< with python..."
	@python \$<

%: %.sh
	@echo "Running \$< with bash..."
	@bash \$<
EOF

zenity --info --text="Makefile generated successfully." --title="Success"
exit 0

